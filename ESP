-- Function to format numbers
function format_number(number)
    local suffixes = {"", "K", "M", "B", "T", "QD"}
    local suffix_index = 1

    while math.abs(number) >= 1000 and suffix_index < #suffixes do
        number = number / 1000.0
        suffix_index = suffix_index + 1
    end

    return string.format("%.2f%s", number, suffixes[suffix_index])
end

local player = game:GetService("Players").LocalPlayer

-- Function to create the GUI
local function createGUI(character)
    -- Wait for the character's Head to be available
    local head = character:WaitForChild("Head")

    -- Check if a highlight already exists and create one if not
    local highlight = character:FindFirstChildOfClass("Highlight")
    if not highlight then
        highlight = Instance.new("Highlight")
        highlight.Parent = character
        highlight.FillColor = Color3.new(1, 0, 0) -- Starting color (red)
        highlight.OutlineColor = Color3.new(0, 0, 0) -- Outline color (black)
    end

    -- Create a BillboardGui for the display name
    local billboardGui = character:FindFirstChild("BillboardGui") or Instance.new("BillboardGui")
    billboardGui.Parent = head
    billboardGui.Size = UDim2.new(0, 200, 0, 50) -- Size of the GUI
    billboardGui.StudsOffset = Vector3.new(0, 2, 0) -- Position above the head
    billboardGui.Adornee = head -- Set the object it will be attached to
    billboardGui.AlwaysOnTop = true -- Keep it always on top

    -- Create or reuse the TextLabel
    local usernameLabel = billboardGui:FindFirstChild("UsernameLabel") or Instance.new("TextLabel")
    usernameLabel.Name = "UsernameLabel" -- Set name for easy reference
    usernameLabel.Parent = billboardGui
    usernameLabel.Size = UDim2.new(1, 0, 1, 0) -- Fill the BillboardGui
    usernameLabel.BackgroundTransparency = 1 -- Make background transparent
    usernameLabel.TextColor3 = Color3.new(1, 1, 1) -- Initial text color (white)
    usernameLabel.TextScaled = true -- Scale text to fit the label
    usernameLabel.TextSize = 20 -- Set the desired text size (adjust as needed)
    usernameLabel.TextWrapped = false -- Ensure the text stays on one line

    -- Fetch player stats from ReplicatedStorage
    local playerStats = game:GetService("ReplicatedStorage"):FindFirstChild("Datas"):FindFirstChild(tostring(player.UserId))
    local ownerTag = ""
    local totalStats = math.huge -- Start with the highest possible value
    local rebirths = 0 -- Default rebirths

    if playerStats then
        -- Fetch rebirth data
        rebirths = playerStats:FindFirstChild("Rebirth") and playerStats.Rebirth.Value or 0

        -- Fetch the various stats
        local strengthStat = playerStats:FindFirstChild("Strength") and playerStats.Strength.Value or math.huge
        local defenseStat = playerStats:FindFirstChild("Defense") and playerStats.Defense.Value or math.huge
        local energyStat = playerStats:FindFirstChild("Energy") and playerStats.Energy.Value or math.huge
        local speedStat = playerStats:FindFirstChild("Speed") and playerStats.Speed.Value or math.huge

        -- Calculate the lowest stat
        totalStats = math.min(strengthStat, defenseStat, energyStat, speedStat)
    end -- End of playerStats check

    -- Check the player's username and set the font accordingly
    if player.Name == "Steve72009" or player.Name == "Pserson2" or player.Name == "Reekennedy1057" then
        ownerTag = " || Script Dev"
        usernameLabel.Font = Enum.Font.SpecialElite -- Change font to Special Elite
    else
        usernameLabel.Font = Enum.Font.Cartoon -- Default font for other players
    end

    usernameLabel.TextStrokeTransparency = .01

    -- Set the label text to include the username, owner tag, and stats
    usernameLabel.Text = string.format("%s%s || Rebirths: %d - Total Stats: %s", 
                                        player.DisplayName, ownerTag, rebirths, format_number(totalStats))

    -- Function to change color
    local function changeColor()
        while true do
            for hue = 0, 1, 0.01 do -- Transition through hues
                local color = Color3.fromHSV(hue, 1, 1) -- Full saturation and value for bright colors
                highlight.FillColor = color -- Update highlight color
                usernameLabel.TextColor3 = color -- Update text color
                wait(0.02) -- Wait for a smoother transition
            end
        end
    end

    -- Start a new thread to change colors
    spawn(changeColor)
end

-- Connect to CharacterAdded to create GUI on respawn
player.CharacterAdded:Connect(function(character)
    -- Wait for the character to fully load
    character:WaitForChild("HumanoidRootPart")
    createGUI(character)
end)

-- Create GUI for the initial character if already loaded
if player.Character then
    createGUI(player.Character)
end
