local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")

-- Function to format numbers with suffixes
function format_number(number)
    local suffixes = {"", "K", "M", "B", "T", "QD"}
    local suffix_index = 1

    while math.abs(number) >= 1000 and suffix_index < #suffixes do
        number = number / 1000.0
        suffix_index = suffix_index + 1
    end

    return string.format("%.2f%s", number, suffixes[suffix_index])
end

local function createBillboardGui(player, highlight)
    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Adornee = player.Character:WaitForChild("Head")
    billboardGui.Size = UDim2.new(1, 0, 1, 0)
    billboardGui.StudsOffset = Vector3.new(0, 3, 0) -- Offset above the head
    billboardGui.AlwaysOnTop = true

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = highlight.FillColor
    textLabel.TextScaled = false
    textLabel.Parent = billboardGui
    textLabel.TextSize = 20 -- Set the desired text size (adjust as needed)
    textLabel.TextWrapped = false -- Ensure the text stays on one line

    billboardGui.Parent = player.Character.Head

    return textLabel
end

local function updateBillboardText(textLabel, playerStats)
    local displayName = Players.LocalPlayer.DisplayName
    local strengthStat = playerStats:FindFirstChild("Strength")
    local rebirthStat = playerStats:FindFirstChild("Rebirth")

    local strengthValue = strengthStat and strengthStat.Value or 0
    local rebirthValue = rebirthStat and rebirthStat.Value or 0

    textLabel.Text = string.format("%s, %s, %d", displayName, format_number(strengthValue), rebirthValue)
end

local function updateHighlight(highlight, statValue)
    local colorRanges = {
        {max = 1e6, color = Color3.fromRGB(105, 105, 105)}, -- Dark Gray for <1M
        {max = 5e6, color = Color3.fromRGB(0, 100, 0)},     -- Dark Green for 1M - 5M
        {max = 30e6, color = Color3.fromRGB(144, 238, 144)},-- Light Green for 5M - 30M
        {max = 120e6, color = Color3.fromRGB(0, 0, 128)},   -- Navy Blue for 30M - 120M
        {max = 1e9, color = Color3.fromRGB(0, 0, 255)},     -- Blue for 120M - 1B
        {max = 5e9, color = Color3.fromRGB(173, 216, 230)}, -- Light Blue for 1B - 5B
        {max = 30e9, color = Color3.fromRGB(0, 255, 255)},  -- Cyan for 5B - 30B
        {max = 1e11, color = Color3.fromRGB(255, 215, 0)},  -- Gold for 30B - 100B
        {max = 1e12, color = Color3.fromRGB(255, 255, 0)},  -- Yellow for 100B - 1T
        {max = 1e13, color = Color3.fromRGB(220, 20, 60)},  -- Crimson for 1T - 10T
        {max = 1e14, color = Color3.fromRGB(255, 0, 0)},    -- Red for 10T - 100T
    }

    for _, range in ipairs(colorRanges) do
        if statValue < range.max then
            highlight.FillColor = range.color
            break
        end
    end
end

local function createHighlightForPlayer(player)
    local highlight = Instance.new("Highlight")
    highlight.Parent = player
    highlight.FillColor = Color3.fromRGB(255, 255, 255) -- Default color

    player.CharacterAdded:Connect(function(character)
        wait(0.1) -- Wait for the character to fully load
        highlight.Adornee = character
        local textLabel = createBillboardGui(player, highlight)

        while true do
            local playerStats = ReplicatedStorage:FindFirstChild("Datas"):FindFirstChild(tostring(player.UserId))
            if playerStats then
                local strengthStat = playerStats:FindFirstChild("Strength")
                local statValue = strengthStat and strengthStat.Value or 0
                updateHighlight(highlight, statValue)
                updateBillboardText(textLabel, playerStats)
            end
            wait(0.1)
        end
    end)

    if player.Character then
        highlight.Adornee = player.Character
        local textLabel = createBillboardGui(player, highlight)
        local playerStats = ReplicatedStorage:FindFirstChild("Datas"):FindFirstChild(tostring(player.UserId))

        while true do
            if playerStats then
                updateBillboardText(textLabel, playerStats)
                local strengthStat = playerStats:FindFirstChild("Strength")
                local statValue = strengthStat and strengthStat.Value or 0
                updateHighlight(highlight, statValue)
            end
            wait(0.1)
        end
    end
end

-- Create highlights and billboards for all existing players
for _, player in ipairs(Players:GetPlayers()) do
    createHighlightForPlayer(player)
end

-- Monitor for new players joining
Players.PlayerAdded:Connect(function(newPlayer)
    createHighlightForPlayer(newPlayer)
end)
